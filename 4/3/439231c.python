from collections import defaultdict
from itertools import product

def enhance(image, bounds, algorithm):
    new_padding = algorithm[-image.default_factory()]
    new_image = defaultdict(lambda: new_padding)

    (min_r, max_r), (min_c, max_c) = bounds
    for r in range(min_r - 1, max_r + 2):
        for c in range(min_c - 1, max_c + 2):
            index = 0
            for p, (dr, dc) in enumerate(product([-1, 0, 1], repeat=2)):
                index = index << 1 | image[r + dr, c + dc]
            new_image[r, c] = algorithm[index]

    new_bounds = (min_r - 1, max_r + 1), (min_r - 1, max_r + 1)
    return new_image, new_bounds

with open(INPUT_FILE, "r") as f:
    algo, data = f.read().split("\n\n")

algo = [int(char == "#") for char in algo]
image = defaultdict(int)
image.update({
    (r, c): int(char == "#")
    for r, line in enumerate(data.splitlines()) for c, char in enumerate(line)
})
max_x, max_y = max(image.keys())
bounds = ((0, max_x), (0, max_y))

for _ in range(50):
    image, bounds = enhance(image, bounds, algo)

print(sum(image.values()))
