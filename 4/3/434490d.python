def explode(snailfish_num):
    depth = 0
    for idx, token in enumerate(snailfish_num):
        if token == "[":
            depth += 1
        elif token == "]":
            depth -= 1
        if token == "[" and depth > 4:
            break

    if depth == 0:
        return snailfish_num, False

    _, left, _, right, _, *rest = snailfish_num[idx:]  # [ left , right ] *rest
    beginning = snailfish_num[:idx]
    for idx, val in enumerate(reversed(beginning)):
        if isinstance(val, int):
            beginning[-idx - 1] += left
            break
    for idx, val in enumerate(rest):
        if isinstance(val, int):
            rest[idx] += right
            break
    return beginning + [0] + rest, True
