from functools import reduce
from itertools import permutations

BASE = "abcdefg"
SEGMENTS = [
    set("abcefg"),
    set("cf"),
    set("acdeg"),
    set("acdfg"),
    set("bcdf"),
    set("abdfg"),
    set("abdefg"),
    set("acf"),
    set("abcdefg"),
    set("abcdfg"),
]
ALL_ORDERINGS = list(permutations(BASE))

def translate(ordering, digit):
    return {BASE[ordering.index(char)] for char in digit}

def from_base(digits, base=10):
    return reduce(lambda l, r: l * base + r, digits, 0)

with open(INPUT_FILE, "r") as f:
    lines = f.readlines()

acc = 0
for line in lines:
    hints, values = map(str.split, line.split(" | "))
    for ordering in ALL_ORDERINGS:
        if all(translate(ordering, hint) in SEGMENTS for hint in hints):
            digit_ints = [SEGMENTS.index(translate(ordering, value)) for value in values]
            acc += int("".join(str(digit) for digit in digit_ints))
            break
print(acc)
