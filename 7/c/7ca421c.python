from collections import defaultdict, deque

graph = defaultdict(list)
with open(INPUT_FILE, "r") as f:
    for line in f:
        v1, v2 = line.strip().split("-")
        graph[v1].append(v2)
        graph[v2].append(v1)
        
count = 0
paths_being_built = deque([["start"]])
while paths_being_built:
    path = *_, last_visited = paths_being_built.pop()
    if last_visited == "end":
        count += 1
        continue

    paths_being_built.extend(  # <- changed from `extendleft` to `extend`.
        [
            path + [neighbour]
            for neighbour in graph[last_visited]
            if not (neighbour.islower() and neighbour in path)
        ]
    )

print(count)
