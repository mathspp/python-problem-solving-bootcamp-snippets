from itertools import product

def pad(grid, padding):
    """Pad the given grid with the `padding` character."""
    return (
        [[padding] * (4 + len(grid[0])) for _ in range(2)] +
        [[padding, padding] + row + [padding, padding] for row in grid] +
        [[padding] * (4 + len(grid[0])) for _ in range(2)]
    )

def enhance(image, algorithm, padding):
    image = pad(image, padding)
    new_image = []
    for r in range(1, len(image) - 1):
        row = []
        for c in range(1, len(image[0]) - 1):
            binary = ""
            for dr, dc in product([-1, 0, 1], repeat=2):
                binary += image[r + dr][c + dc]
            row.append(algorithm[int(binary, 2)])
        new_image.append(row)

    return new_image, algorithm[0] if padding == "0" else algorithm[-1]

with open(INPUT_FILE, "r") as f:
    algorithm, data = f.read().split("\n\n")

algo = ["0" if char == "." else "1" for char in algorithm]
image = [
    ["0" if char == "." else "1" for char in line]
    for line in data.splitlines()
]
padding = "0"

for _ in range(2):
    image, padding = enhance(image, algo, padding)

print(sum(char == "1" for row in image for char in row))
