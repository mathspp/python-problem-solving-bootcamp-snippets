def hex_to_bin(string):
    return bin(int(string, 16)).removeprefix("0b").zfill(4 * len(string))

def sum_versions(packet):
    """Sum the versions of the given packet and all (deeply) nested sub-packets."""

    if len(packet) == 2:
        return packet[0]
    elif len(packet) == 3:
        return packet[0] + sum(sum_versions(sub) for sub in packet[2])


with open(INPUT_FILE, "r") as f:
    hex_string = f.read().strip()

parsed, _ = packet(hex_to_bin(hex_string))
print(sum_versions(parsed[0]))
